
uniform mat4 mWorldViewProj;
uniform mat4 mInvWorld;
uniform mat4 mTransWorld;
uniform vec3 mLightPos;
uniform vec4 mLightColor;

void main(void)
{
	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;

	//…¢…‰π‚’’π´ Ω:
	// C = max£®N°§L£¨0£©x Cmat x Cli
	
	//vec4 normal = vec4(gl_Normal, 0.0);
	//normal = mInvWorld * normal;
	//normal = normalize(normal);
	
	//vec4 worldpos = gl_Vertex * mTransWorld;
	
	//vec4 lightVector = worldpos - vec4(mLightPos,1.0);
	//lightVector = normalize(lightVector);
	
	//float tmp2 = dot(-lightVector, normal);
	
	//vec4 tmp = vec4(1.0) * tmp2;
	//gl_FrontColor = gl_BackColor = vec4(tmp.x, tmp.y, tmp.z, 0.0);

	//vec3 N = normalize( gl_NormalMatrix * gl_Normal );
	vec4 normal = vec4(gl_Normal, 0.0);
	normal = mInvWorld * normal;
	normal = normalize(normal);
	vec3 N = normal.xyz;
	vec3 L = normalize( vec3( -1.0, 0.0, 0.0 ) );

	float NdotL = dot( N, L );

	gl_FrontColor = gl_Color * vec4( max(0.0, NdotL) ) + vec4(0.15);
	
	gl_TexCoord[0] = gl_MultiTexCoord0;
}
