// This file has been generated by Py++.

#include "def.h"

#include "GameScene.h"

#include "GameSceneManager.h"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

namespace bp = boost::python;

struct GameScene_wrapper : GameScene, bp::wrapper< GameScene > {

    GameScene_wrapper( )
    : GameScene( )
      , bp::wrapper< GameScene >(){
        // null constructor
    
    }

    virtual void Draw(  ) {
        if( bp::override func_Draw = this->get_override( "Draw" ) )
            func_Draw(  );
        else{
            this->GameScene::Draw(  );
        }
    }
    
    void default_Draw(  ) {
        GameScene::Draw( );
    }

    virtual void Init(  ){
        bp::override func_Init = this->get_override( "Init" );
        func_Init(  );
    }

    virtual void Release(  ){
        bp::override func_Release = this->get_override( "Release" );
        func_Release(  );
    }

    virtual void Run(  ){
        bp::override func_Run = this->get_override( "Run" );
        func_Run(  );
    }

};

BOOST_PYTHON_MODULE( GameSceneModule ){
    bp::class_< GameScene_wrapper, boost::noncopyable >( "GameScene", bp::init< >() )    
		.def_readwrite( "Scenes", &GameScene_wrapper::Scenes )
        .def( 
            "Draw"
            , (void ( ::GameScene::* )(  ) )(&::GameScene::Draw)
            , (void ( GameScene_wrapper::* )(  ) )(&GameScene_wrapper::default_Draw) )    
        .def( 
            "GetName"
            , (::std::string const & ( ::GameScene::* )(  ) const)( &::GameScene::GetName )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "Init"
            , bp::pure_virtual( (void ( ::GameScene::* )(  ) )(&::GameScene::Init) ) )    
        .def( 
            "Release"
            , bp::pure_virtual( (void ( ::GameScene::* )(  ) )(&::GameScene::Release) ) )    
        .def( 
            "Run"
            , bp::pure_virtual( (void ( ::GameScene::* )(  ) )(&::GameScene::Run) ) )    
        .def( 
            "SetName"
            , (void ( ::GameScene::* )( ::std::string const & ) )( &::GameScene::SetName )
            , ( bp::arg("name") ) )    
        .def_readwrite( "Name", &GameScene::Name );

    bp::class_< GameSceneManager, boost::noncopyable >( "GameSceneManager", bp::no_init )    
        .def( bp::init< >() )    
        .def( 
            "AddMenuScene"
            , (::GameScene * ( ::GameSceneManager::* )( ::std::string const & ) )( &::GameSceneManager::AddMenuScene )
            , ( bp::arg("menusceneName") )
             , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "AddMultiplayerScene"
            , (::GameScene * ( ::GameSceneManager::* )(  ) )( &::GameSceneManager::AddMultiplayerScene )
             , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "AddStartScene"
            , (::GameScene * ( ::GameSceneManager::* )(  ) )( &::GameSceneManager::AddStartScene )
             , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "GetCurrentGameScene"
            , (::GameScene * ( ::GameSceneManager::* )(  ) )( &::GameSceneManager::GetCurrentGameScene )
             , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "GetSceneByName"
            , (::GameScene * ( ::GameSceneManager::* )( ::std::string const & ) )( &::GameSceneManager::GetSceneByName )
            , ( bp::arg("name") )
             , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "SetCurrentGameScene"
            , (void ( ::GameSceneManager::* )( ::GameScene * ) )( &::GameSceneManager::SetCurrentGameScene )
            , ( bp::arg("scene") ) );
}
